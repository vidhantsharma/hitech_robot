<?xml version="1.0"?>

<robot name="hitech_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:include filename="$(find hitech_robot_description)/urdf/velocity_control_gazebo.xacro"/>

  <link name="base_footprint"/>

  <!-- Robot Base Link (Root Link) -->
  <link name="base_link">
    <visual>
      <geometry>
          <box size="0.5 0.5 0.1"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/> <!-- Blue Color -->
      </material>
    </visual>
    <collision>
      <geometry>
          <box size="0.5 0.5 0.1"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0 0 0.075" rpy="0 0 0"/>
  </joint>

  <!-- Left Wheel -->
  <link name="left_wheel">
    <inertial>
      <mass value="0.1" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/> <!-- Black Color -->
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- Right Wheel -->
  <link name="right_wheel">
    <inertial>
      <mass value="0.1" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/> <!-- Black Color -->
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- Camera Mount -->
  <link name="camera_mount">
    <inertial>
      <mass value="0.1" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.1 0.1 0.05"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/> <!-- Gray Color -->
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.05"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </collision>
  </link>

  <!-- Camera Link -->
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.05 0.1 0.1"/>
      </geometry>
      <material name="light_gray">
        <color rgba="0.8 0.8 0.8 1"/> <!-- Light Gray Color -->
      </material>
    </visual>
  </link>

  <!-- Lidar Mount -->
  <link name="lidar_mount">
    <inertial>
      <mass value="0.1" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.1 0.1 0.025"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/> <!-- Gray Color -->
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.025"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </collision>
  </link>   

  <!-- Lidar Link -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.025"/>
      </geometry>
      <material name="light_red">
        <color rgba="0.5 0 0 1"/> <!-- Light red Color -->
      </material>
    </visual>
  </link>

  <!-- Joint: Base to Left Wheel -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0.0 0.275 -0.05" rpy="1.57 0 0"/> <!-- Positioning and rotating left wheel along the y-axis -->
    <axis xyz="0 0 1"/> <!-- Rotate around the z-axis -->
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    <pid p="100" i="0.1" d="1.0" />
  </joint>

  <!-- Joint: Base to Right Wheel -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0.0 -0.275 -0.05" rpy="1.57 0 0"/> <!-- Positioning and rotating right wheel along the y-axis -->
    <axis xyz="0 0 1"/> <!-- Rotate around the z-axis -->
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    <pid p="100" i="0.1" d="1.0" />
  </joint>

  <!-- Joint: Base to Camera Mount (Fixed) -->
  <joint name="camera_mount_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_mount"/>
    <origin xyz="0 0 0.075"/> <!-- Positioning the camera mount above the base -->
  </joint>

  <!-- Camera Link to Camera Mount -->
  <joint name="camera_link_joint" type="fixed">
    <parent link="camera_mount"/>
    <child link="camera_link"/>
    <origin xyz="0 0 0"/> <!-- Camera link mounted on the camera mount -->
  </joint>

  <!-- Joint: Base to Lidar Mount (Fixed) -->
  <joint name="lidar_mount_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_mount"/>
    <origin xyz="-0.2 0 0.0625"/> <!-- Positioning the lidar mount above the base -->
  </joint>

  <!-- Camera Link to Camera Mount -->
  <joint name="lidar_link_joint" type="fixed">
    <parent link="lidar_mount"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 0.0125"/> <!-- Camera link mounted on the camera mount -->
  </joint>

  <!-- Depth Camera Sensor -->
  <gazebo reference="camera_link">
    <sensor name="camera_link_depth_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov> <!-- 60 degrees FOV -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      
      <!-- Depth camera plugin for processing -->
      <plugin name="camera_link_depth_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline> <!-- Baseline for stereo camera (if used) -->
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>camera_link_ir</cameraName>
        <imageTopicName>/camera_link/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera_link/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera_link/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/camera_link/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/camera_link/depth/points</pointCloudTopicName>
        <frameName>camera_link_frame</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff> <!-- Minimum distance for point cloud -->
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax> <!-- Max distance for point cloud -->
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Lidar Sensor attached to the lidar_link -->
  <gazebo reference="lidar_link">
    <sensor type="gpu_ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/lidar/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- Front Caster Wheel -->
  <link name="front_caster_wheel_link">
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.03" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.03" length="0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- Rear Caster Wheel -->
  <link name="rear_caster_wheel_link">
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.03" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.03" length="0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- Joint: Base to Front Caster Wheel -->
  <joint name="front_caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster_wheel_link"/>
    <origin xyz="0.225 0 -0.075"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Joint: Base to Rear Caster Wheel -->
  <joint name="rear_caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster_wheel_link"/>
    <origin xyz="-0.225 0 -0.075"/>
    <axis xyz="0 1 0"/>
  </joint>

</robot>